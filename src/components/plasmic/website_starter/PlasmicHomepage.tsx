// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6yjfqP5Fduthu9Xyjdktxt
// Component: llUOvJ4iZ-AU

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: KBChKOyhAujY/component

import { useScreenVariants as useScreenVariantslLkZv7NwY4H } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: lLkZv-7nwY4H/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: 6yjfqP5Fduthu9Xyjdktxt/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: llUOvJ4iZ-AU/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: wh34H02-tohx/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: hCFZOCgiGarX/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: 6_aSiOvpbNVb/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: miSOgDDr1B2O/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: krVpT1ht6ZyY/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: _pzGJkgRKLdo/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: e9OLch6EYsSq/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: fJ4ONHXS7ZJd/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: x16fEyt0OQwF/icon
import imageEwSWwwP6OXx from "./images/image.svg"; // plasmic-import: ewSWwwP6o_xx/picture
import tree7368851280JpgCtRcbVrYmp1J from "./images/tree7368851280Jpg.jpg"; // plasmic-import: CtRCBVrYmp1j/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  button?: p.Flex<"button">;
  foreground?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  foreground2?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const $$ = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantslLkZv7NwY4H()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___7W6Hs)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___49Mtl)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__cqVck)}
                displayHeight={"40px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"40px"}
                src={{
                  src: imageEwSWwwP6OXx,
                  fullWidth: 150,
                  fullHeight: 150,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wnKk)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__tf8Qf)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___8JwcW)}
                      role={"img"}
                    />
                  }
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }
                  }}
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__maTg1)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f5MM
                    )}
                  >
                    {"Home"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__xL6RO)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__gRnK)}
                      role={"img"}
                    />
                  }
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToNewPage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/about` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToNewPage"] != null &&
                      typeof $steps["goToNewPage"] === "object" &&
                      typeof $steps["goToNewPage"].then === "function"
                    ) {
                      $steps["goToNewPage"] = await $steps["goToNewPage"];
                    }
                  }}
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__xTm6G)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1GEm2
                    )}
                  >
                    {"Company"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__ocEwQ)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__ebca1)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__qX3Dk)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gGymC
                    )}
                  >
                    {"Log in"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__ko7Fn)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__ut39O)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg___9Dn8H)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__teUjn
                    )}
                  >
                    {"Sign up"}
                  </div>
                </Button2>
              </p.Stack>
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__zTd8U)}>
                  <button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__ul8U4)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ch9Fe)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__wc3Fd)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yk4F
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                </div>
              ) : null}
            </p.Stack>
          </p.Stack>
          <div className={classNames(projectcss.all, sty.freeBox__zPAe)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___3Ax1O)}
            >
              <div className={classNames(projectcss.all, sty.column___6CmpS)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ei2Fi)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0S3K
                    )}
                  >
                    {"Hero"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Pl8A
                    )}
                  >
                    {
                      "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fDi7X
                    )}
                  >
                    {
                      "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                    }
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__vBn5R)}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__hpTzt)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__puiWx)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x76Ek
                      )}
                    >
                      {"Start now ->"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__ynHeS)}>
                <div className={classNames(projectcss.all, sty.freeBox__nvSPq)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__soLP)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: tree7368851280JpgCtRcbVrYmp1J,
                      fullWidth: 1280,
                      fullHeight: 797,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </p.Stack>
          </div>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__uroyK)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___0HQpR)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__npGb
                  )}
                >
                  {"Values"}
                </div>
                <h2
                  data-plasmic-name={"h2"}
                  data-plasmic-override={overrides.h2}
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2
                  )}
                >
                  {"Not just another design"}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jLbuw
                  )}
                >
                  {
                    "A euismod eros a hendrerit tristique suscipit sit aptent dolor adipiscing inceptos cras ullamcorper a vivamus parturient."
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1Apwo)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__je98H)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uhuOo)}
                    >
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg___2Hz2T)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uwF5N
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__q5KQ)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xoZbg)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yVZn
                        )}
                      >
                        {"Welcoming atmosphere"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mxoYd
                        )}
                      >
                        {
                          "Orci commodo maecenas fringilla ad nec amet tempus mattis platea eget tortor sit dolor etiam a ullamcorper varius."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1E3Ek)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vmlEq)}
                    >
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg__mQf8R)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1RKs3
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__fpj4)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___36IXp
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ja45Y
                        )}
                      >
                        {"Tested and secure"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lNpIg
                        )}
                      >
                        {
                          "Feugiat sapien ornare vivamus bibendum a ullamcorper feugiat faucibus feugiat blandit a per imperdiet dapibus metus ut scelerisque sagittis felis nostra per accumsan rutrum."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__enStg)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xTbd4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__z0Ma2)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__saNni)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8PHwb
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__fmZpT)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pBb4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lbkX
                        )}
                      >
                        {"Mindful notifications"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sqMDr
                        )}
                      >
                        {
                          "Porttitor feugiat a scelerisque nullam parturient vestibulum tempor a litora suscipit arcu potenti varius venenatis venenatis dapibus fames adipiscing in in taciti."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__tqxdB)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__guk2G)}
                    >
                      <Icon7Icon
                        className={classNames(projectcss.all, sty.svg__iaV7K)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dv7Fl
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__vvBv)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__d0UNt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bIbe8
                        )}
                      >
                        {"Real-time results"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bkMfE
                        )}
                      >
                        {
                          "Scelerisque facilisi at class a inceptos mi aliquet vestibulum taciti platea amet litora quisque mus parturient a mauris arcu."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </p.Stack>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bZcNi)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pHnzy)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cZFjT
                )}
              >
                {"Let's get going."}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gqNz8
                )}
              >
                {
                  "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                }
              </div>
              <Button2
                className={classNames("__wab_instance", sty.button2__lywN)}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___3V2J6)}
                    role={"img"}
                  />
                }
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__qeRr)}
                    role={"img"}
                  />
                }
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zNxre
                  )}
                >
                  {"Start now ->"}
                </div>
              </Button2>
            </p.Stack>
          </p.Stack>
          <div className={classNames(projectcss.all, sty.freeBox__huO5N)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__qVbjj)}
            >
              <div className={classNames(projectcss.all, sty.column__e4LTu)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2GDvr)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1GjAu)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    src={{
                      src: imageEwSWwwP6OXx,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xqUzo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kGo2X
                      )}
                    >
                      {"Connect with us"}
                    </div>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__tmdK)}
                    >
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__m1QTg)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__vMqc)}
                        role={"img"}
                      />

                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__qpBxr)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__sylWk)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qGrVb)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aGymk
                    )}
                  >
                    {"Product"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__yM4B)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___9Jb0S)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__kuNcJ)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pl5OV
                      )}
                    >
                      {"Pricing"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___8Dfw5
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__kkiNo)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__iwSbw)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nj2Id
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__iTrk)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__mBc0H)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__nA4Px)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u5Unk
                      )}
                    >
                      {"Integrations"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__hTccV)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__bNd6X)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__wKZkV)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dY14P
                      )}
                    >
                      {"Insights"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__eVgwp)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rvXbx)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__enErp
                    )}
                  >
                    {"Support"}
                  </div>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___5Qzol
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___5Te9T)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__bJBf)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nYnXb
                      )}
                    >
                      {"Documentation"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__ujXo)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__rdlUn)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__urc2M)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fnDqg
                      )}
                    >
                      {"FAQs"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__lTrzc)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__bR1VM)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__tk3Co)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pAgQx
                      )}
                    >
                      {"Status"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__dt4G7)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rhGtu)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__acwqH
                    )}
                  >
                    {"Company"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2___7KUb)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__aoZkp)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___40ASf)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bEMz3
                      )}
                    >
                      {"About"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__nx4H9)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__gd9BU)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__ooXfZ)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j9Quk
                      )}
                    >
                      {"Contact us"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__cHY1)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__kAmeN)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__oPlTx)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wI6Q
                      )}
                    >
                      {"Careers"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___6Fw5J
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__sflc6)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__oOSd)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cH8Pr
                      )}
                    >
                      {"Media"}
                    </div>
                  </Button2>
                </p.Stack>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "button", "foreground", "h2", "foreground2"],
  button: ["button"],
  foreground: ["foreground", "h2"],
  h2: ["h2"],
  foreground2: ["foreground2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  button: "button";
  foreground: "div";
  h2: "h2";
  foreground2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button: makeNodeComponent("button"),
    foreground: makeNodeComponent("foreground"),
    h2: makeNodeComponent("h2"),
    foreground2: makeNodeComponent("foreground2"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
